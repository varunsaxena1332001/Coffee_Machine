<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CoffeeMachineTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2020-02-19T17:52:05" hostname="UPLC" time="0.421">
  <properties/>
  <testcase name="start" classname="CoffeeMachineTest" time="0.421">
    <failure message="java.lang.AssertionError: Wrong answer in test #5&#10;&#10;Your output:&#10;Yes, I can make that amount of coffee (and even 1 more than that)&#10;Right output:&#10;No, I can make only 2 cup(s) of coffee&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Write how many ml of water the coffee machine has:&#10;&gt;599&#10;Write how many ml of milk the coffee machine has:&#10;&gt;250&#10;Write how many grams of coffee beans the coffee machine has:&#10;&gt;200&#10;Write how many cups of coffee you will need:&#10;&gt;10&#10;Yes, I can make that amount of coffee (and even 1 more than that)" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #5

Your output:
Yes, I can make that amount of coffee (and even 1 more than that)
Right output:
No, I can make only 2 cup(s) of coffee

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Write how many ml of water the coffee machine has:
&gt;599
Write how many ml of milk the coffee machine has:
&gt;250
Write how many grams of coffee beans the coffee machine has:
&gt;200
Write how many cups of coffee you will need:
&gt;10
Yes, I can make that amount of coffee (and even 1 more than that)
	at org.junit.Assert.fail(Assert.java:88)
	at org.hyperskill.hstest.v6.stage.BaseStageTest.start(BaseStageTest.java:172)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Write how many ml of water the coffee machine has:
>300
Write how many ml of milk the coffee machine has:
>65
Write how many grams of coffee beans the coffee machine has:
>111
Write how many cups of coffee you will need:
>1
Yes, I can make that amount of coffee
?[1;31m
Start test 2?[0m
Write how many ml of water the coffee machine has:
>600
Write how many ml of milk the coffee machine has:
>153
Write how many grams of coffee beans the coffee machine has:
>100
Write how many cups of coffee you will need:
>1
Yes, I can make that amount of coffee (and even 2 more than that)
?[1;31m
Start test 3?[0m
Write how many ml of water the coffee machine has:
>1400
Write how many ml of milk the coffee machine has:
>150
Write how many grams of coffee beans the coffee machine has:
>100
Write how many cups of coffee you will need:
>1
Yes, I can make that amount of coffee (and even 2 more than that)
?[1;31m
Start test 4?[0m
Write how many ml of water the coffee machine has:
>1400
Write how many ml of milk the coffee machine has:
>1500
Write how many grams of coffee beans the coffee machine has:
>45
Write how many cups of coffee you will need:
>1
Yes, I can make that amount of coffee (and even 2 more than that)
?[1;31m
Start test 5?[0m
Write how many ml of water the coffee machine has:
>599
Write how many ml of milk the coffee machine has:
>250
Write how many grams of coffee beans the coffee machine has:
>200
Write how many cups of coffee you will need:
>10
Yes, I can make that amount of coffee (and even 1 more than that)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
